name: Build Core

on:
  push:
    branches:
      - main
      - develop
      - release/*
      - feature/*
      - fix/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      MAVEN_CLI_OPTS: "-T 8 -s ci/ci_maven_settings.xml --batch-mode --errors --fail-at-end --show-version --no-transfer-progress -DinstallAtEnd=true -DdeployAtEnd=true"
      MAVEN_PROFILES: ""
    strategy:
      matrix:
        build: [
          {
            type: "frontend",
            maven-projects: "ui"
          },
          {
            type: "backend",
            maven-projects: "!ui"
          }
        ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          path: ci/ci_maven_settings.xml
          githubServer: false
          servers: '[
            {
              "id": "ghcr.io",
              "username": "${{github.actor}}",
              "password": "${{secrets.GITHUB_TOKEN}}"
            }
          ]'
      - name: Build '${{ matrix.build.type }}' with Maven
        run: mvn $MAVEN_PROFILES $MAVEN_CLI_OPTS --projects '${{ matrix.build.maven-projects }}' deploy
      - name: Log test output on failure
        if: failure() || cancelled()
        run: find . -type f -path "*test-reports/*-output.txt" -exec tail -n +1 {} +

  deploy-staging-environment:
    needs: build
    if: github.event_name != 'pull_request' && (github.ref_name == 'develop' || github.ref_name == 'main' || startsWith(github.ref_name, 'release/'))
    runs-on: self-hosted
    env:
      STAGING_VM_IP: ${{ github.ref_name == 'develop' && '10.3.7.166' || '10.3.7.145' }}
      STAGING_VM_HOSTNAME: ${{ github.ref_name == 'develop' && 'develop.stage.slm.vfk' || 'main.stage.slm.vfk' }}
    steps:
      - name: Deploy stack von staging VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{env.STAGING_VM_IP}}
          username: vfk
          key: ${{secrets.RUNNER_PRIVATE_KEY}}
          envs: STAGING_VM_HOSTNAME
          script: |
            cd /staging/tmp/slm/stack/compose || true
            docker-compose down --volumes || true
            docker system prune -f
            sudo rm -r /staging/tmp && mkdir /staging/tmp && cd /staging/tmp
            git clone -b ${{github.ref_name}} https://github.com/${{github.repository}}.git
            cd /staging/tmp/slm
            CORE_VERSION=$(cat pom.xml | grep -oPm1 "(?<=<revision>)[^<]+")
            cd /staging/tmp/slm/stack/compose
            sed -ir "s/^[#]*\s*SLM_HOSTNAME=.*/SLM_HOSTNAME=$STAGING_VM_HOSTNAME/" .env
            sed -ir "s/^[#]*\s*SLM_VERSION=.*/SLM_VERSION=$CORE_VERSION/" .env
            echo ${{secrets.GITHUB_TOKEN}} | docker login -u${{github.actor}} --password-stdin ghcr.io
            docker-compose pull
            docker-compose up -d --force-recreate
            - name: Deploy stack von staging VM
      - name: Test stack running on staging VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{env.STAGING_VM_IP}}
          username: vfk
          key: ${{secrets.RUNNER_PRIVATE_KEY}}
          script: |
            cd /staging/tmp/slm/tests/backend
            mvn test -Dtest=DockerStackTests
