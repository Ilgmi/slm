### Inputs
- name: "Assert inputs of 'awx/init | awx_create_config.yml'"
  assert:
    that:
      - (AWX_URL is defined) and (AWX_URL|length > 0)
      - (_awx_jwt_authenticator_username is defined) and (_awx_jwt_authenticator_username|length > 0)
      - (_awx_jwt_authenticator_password is defined) and (_awx_jwt_authenticator_password|length > 0)
      - (_consul_token is defined) and (_consul_token|length > 0)

- set_fact:
    _consul_kv_path: "config/awx_jwt_authenticator/data"

- name: "Add AWX config in Consul"
  include_role:
    name: awx/client
    tasks_from: add_awx_config_in_consul

- name: "Add Vault config in Consul"
  include_role:
    name: vault/client
    tasks_from: add_vault_config_in_consul

- name: "Add Consul config in Consul"
  include_role:
    name: consul/client
    tasks_from: add_consul_config_in_consul

- name: "Add AWX credentials for AWX JWT Authenticator in Consul to '{{ _consul_kv_path }}'"
  include_role:
    name: consul/client
    tasks_from: create_or_add_config
  vars:
    _config:
      awx:
        username: "{{ _awx_jwt_authenticator_username }}"
        password: "{{ _awx_jwt_authenticator_password }}"

- name: "Add Consul token to app_configs['awx_jwt_authenticator']"
  set_fact:
    app_configs: "{{ app_configs | default({}) | combine(
    { 'awx_jwt_authenticator': {
        'consul': {
          'acl-token': _consul_token
        }
      }
    }, recursive=true) }}"

- name: "Get config from Consul"
  block:
    - name: "Get config from Consul"
      community.general.consul_kv:
        scheme: "{{ CONSUL_SCHEME }}"
        host: "{{ CONSUL_HOST }}"
        port: "{{ CONSUL_PORT }}"
        token: "{{ _consul_token }}"
        key: "{{ _consul_kv_path }}"
      register: config_consul_response
    - set_fact:
        app_configs: "{{ app_configs | default({}) | combine(
          { 'awx_jwt_authenticator': config_consul_response.data.Value | from_yaml
          }, recursive=true) }}"
